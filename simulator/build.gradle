import net.ltgt.gradle.errorprone.CheckSeverity

apply plugin:'application'

mainClassName = 'com.github.benmanes.caffeine.cache.simulator.Simulator'

dependencies {
  implementation project(':caffeine')

  implementation libraries.xz
  implementation libraries.ohc
  implementation libraries.akka
  implementation libraries.ycsb
  implementation libraries.guava
  implementation libraries.stream
  implementation libraries.tcache
  implementation libraries.cache2k
  implementation libraries.ehcache3
  implementation libraries.fastutil
  implementation libraries.slf4jNop
  implementation libraries.collision
  implementation libraries.fastfilter
  implementation libraries.flipTables
  implementation libraries.jcommander
  implementation libraries.expiringMap
  implementation libraries.commonsLang3
  implementation libraries.commonsMath3
  implementation libraries.elasticSearch
  implementation libraries.commonsCompress
  implementation libraries.univocityParsers
  testImplementation testLibraries.testng
}

//$$ repo and dependencies added by ofanan for using Orestes BF
repositories {
    jcenter()
}
dependencies {
	// https://mvnrepository.com/artifact/redis.clients/jedis
	compile group: 'redis.clients', name: 'jedis', version: '3.2.0'
    compile(
            'com.baqend:bloom-filter:1.0.7'
    )
    // Added to solve a build error in Simulator.java
    compile group: 'org.scala-lang', name: 'scala-library', version: '2.13.1'    
}

test {
  useTestNG()
}

// JMH zip archive overlaps with the application's
if (!(gradle.startParameter.taskNames ==~ /.*uploadArchives.*/)) {
  apply from: "${rootDir}/gradle/jmh.gradle"

  jmh {
    benchmarkMode = ['avgt']
    warmupIterations = 1
    iterations = 3
  }
}

coverity {
  skip = true
}

sonarqube {
  skipProject = true
}

jar.manifest {
  attributes 'Bundle-SymbolicName': 'com.github.benmanes.caffeine.simulator'
  attributes 'Automatic-Module-Name': 'com.github.benmanes.caffeine.simulator'
}

tasks.withType(JavaCompile) {
  options.errorprone.nullaway {
    severity = CheckSeverity.OFF
  }
}

tasks.withType(JavaExec) {
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9099'
    }
}


tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
  // https://github.com/akka/akka/issues/21165
  enabled = !JavaVersion.current().isJava9Compatible()
}

run {
  systemProperties System.properties.findAll {
    it.getKey().startsWith('akka') || it.getKey().startsWith('caffeine')
  }
}

task rewrite(type: JavaExec) {
  main = 'com.github.benmanes.caffeine.cache.simulator.parser.rewrite.Rewriter'
  classpath = sourceSets.main.runtimeClasspath

  def arguments = ['inputFiles', 'outputFile', 'outputFormat']
  for (def argument : arguments) {
    if (project.hasProperty(argument)) {
      args "--${argument}", project.property(argument)
    }
  }
  if (args.isEmpty()) {
    args '--help'
  }
}