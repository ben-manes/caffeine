/**
 * Defines dependencies and versions shared across modules.
 *
 * Multiple dependencies can be shared under the same name:
 *   spring: [
 *     "org.springframework:spring-core:${versions.spring}",
 *     "org.springframework:spring-jdbc:${versions.spring}"
 *   ]
 *
 * Use DependencyHandler.create for advanced dependency configuration:
 *   dependencies.create("org.springframework:spring-core:3.1") {
 *     // Force a version in case of the conflict
 *     force = true
 *
 *     // Disable all transitive dependencies
 *     transitive = false
 *
 *     // exclude a transitive dependency
 *     exclude module: "org.unwanted:unwantedModule" // by group & name
 *     exclude module: "unwantedModule"              // by artifact name
 *     exclude group:  "org.unwanted'                // by artifact group
 *   }
 *
 * @see https://gradle.org/docs/current/javadoc/org/gradle/api/artifacts/dsl/DependencyHandler.html
 */
ext {
  versions = [
    autoValue: '1.10.1',
    cache2k: '2.6.1.Final',
    checkerFramework: '3.29.0',
    coherence: '22.06.2',
    commonsCompress: '1.22',
    commonsLang3: '3.12.0',
    commonsMath3: '3.6.1',
    commonsIo: '2.11.0',
    concurrentlinkedhashmap: '1.4.2',
    config: '1.4.2',
    ehcache3: '3.10.8',
    errorprone: '2.18.0',
    errorproneSupport: '0.7.0',
    expiringMap: '0.5.10',
    fastfilter: '1.0.2',
    fastutil: '8.5.11',
    flipTables: '1.1.0',
    googleJavaFormat: '1.15.0',
    guava: '31.1-jre',
    hazelcast: '5.2.1',
    jackrabbit: '1.46.0',
    jamm: '0.3.3',
    javaObjectLayout: '0.16',
    javapoet: '1.13.0',
    jcache: '1.1.1',
    jfreechart: '1.5.4',
    jmh: '1.36',
    joor: '0.9.14',
    jsr330: '1',
    nullaway: '0.10.7',
    ohc: '0.6.1',
    osgiComponentAnnotations: '1.5.1',
    picocli: '4.7.0',
    slf4j: '2.0.6',
    tcache: '2.0.1',
    stream: '2.9.8',
    univocityParsers: '2.9.1',
    ycsb: '0.17.0',
    xz: '1.9',
    zstd: '1.5.2-5',
  ]
  testVersions = [
    awaitility: '4.2.0',
    commonsCollectionsTests: '4.4',
    eclipseCollections: '11.1.0',
    felix: '7.0.5',
    felixScr: '2.2.4',
    guice: '5.1.0',
    hamcrest: '2.2',
    jcacheTck: '1.1.1',
    jctools: '4.0.1',
    junit4: '4.13.2',
    junit5: '5.9.1',
    junitTestNG: '1.0.4',
    lincheck: '2.16',
    mockito: '4.11.0',
    osgiUtilFunction: '1.2.0',
    osgiUtilPromise: '1.3.0',
    paxExam: '4.13.5',
    slf4jTest: '2.8.1',
    testng: '7.7.1',
    truth: '1.1.3',
  ]
  pluginVersions = [
    bnd: '6.4.0',
    checkstyle: '10.6.0',
    coveralls: '2.12.0',
    dependencyCheck: '7.4.4',
    errorprone: '3.0.1',
    findsecbugs: '1.12.0',
    forbiddenApis: '3.4',
    jacoco: '0.8.7',
    jmh: '0.6.8',
    jmhReport: '0.9.0',
    nexusPublish: '1.1.0',
    nullaway: '1.5.0',
    pmd: '6.53.0',
    semanticVersioning: '1.1.0',
    snyke: '0.4',
    sonarqube: '3.5.0.2730',
    spotbugs: '4.7.3',
    spotbugsContrib: '7.4.7',
    spotbugsPlugin: '5.0.13',
    versions: '0.44.0',
  ]
  platformVersions = [
    asm: '9.4',
    kotlin: '1.8.0',
  ]

  libraries = [
    autoValue: "com.google.auto.value:auto-value-annotations:${versions.autoValue}",
    cache2k: "org.cache2k:cache2k-core:${versions.cache2k}",
    checkerAnnotations: "org.checkerframework:checker-qual:${versions.checkerFramework}",
    checkerFramework: "org.checkerframework:checker:${versions.checkerFramework}",
    coherence: [
      "com.oracle.coherence.ce:coherence:${versions.coherence}",
      'javax.json.bind:javax.json.bind-api:1.0',
    ],
    commonsCompress: "org.apache.commons:commons-compress:${versions.commonsCompress}",
    commonsLang3: "org.apache.commons:commons-lang3:${versions.commonsLang3}",
    commonsMath3: "org.apache.commons:commons-math3:${versions.commonsMath3}",
    commonsIo: "commons-io:commons-io:${versions.commonsIo}",
    concurrentlinkedhashmap: "com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:${versions.concurrentlinkedhashmap}",
    config: "com.typesafe:config:${versions.config}",
    ehcache3: "org.ehcache:ehcache:${versions.ehcache3}",
    errorproneAnnotations: "com.google.errorprone:error_prone_annotations:${versions.errorprone}",
    errorproneCore: dependencies.create("com.google.errorprone:error_prone_core:${versions.errorprone}") {
      exclude group: 'com.github.ben-manes.caffeine'
    },
    errorproneMockito: "org.mockito:mockito-errorprone:${testVersions.mockito}",
    errorproneSupport: "tech.picnic.error-prone-support:error-prone-contrib:${versions.errorproneSupport}",
    expiringMap: "net.jodah:expiringmap:${versions.expiringMap}",
    fastfilter: "io.github.fastfilter:fastfilter:${versions.fastfilter}",
    fastutil: "it.unimi.dsi:fastutil-core:${versions.fastutil}",
    flipTables: "com.jakewharton.fliptables:fliptables:${versions.flipTables}",
    googleJavaFormat: "com.google.googlejavaformat:google-java-format:${versions.googleJavaFormat}",
    guava: "com.google.guava:guava:${versions.guava}",
    hazelcast: "com.hazelcast:hazelcast:${versions.hazelcast}",
    jackrabbit: "org.apache.jackrabbit:oak-core:${versions.jackrabbit}",
    jamm: "com.github.jbellis:jamm:${versions.jamm}",
    javaObjectLayout: "org.openjdk.jol:jol-cli:${versions.javaObjectLayout}",
    javapoet: "com.squareup:javapoet:${versions.javapoet}",
    jcache: "javax.cache:cache-api:${versions.jcache}",
    jfreechart: "org.jfree:jfreechart:${versions.jfreechart}",
    jsr330: "javax.inject:javax.inject:${versions.jsr330}",
    joor: "org.jooq:joor-java-8:${versions.joor}",
    nullaway: "com.uber.nullaway:nullaway:${versions.nullaway}",
    ohc: "org.caffinitas.ohc:ohc-core-j8:${versions.ohc}",
    osgiComponentAnnotations: "org.osgi:org.osgi.service.component.annotations:${versions.osgiComponentAnnotations}",
    picocli: "info.picocli:picocli:${versions.picocli}",
    slf4jNop: [
      "org.slf4j:slf4j-nop:${versions.slf4j}",
      "org.slf4j:slf4j-jdk-platform-logging:${versions.slf4j}",
    ],
    slf4jJdk: [
      "org.slf4j:slf4j-jdk14:${versions.slf4j}",
      "org.slf4j:slf4j-jdk-platform-logging:${versions.slf4j}",
    ],
    tcache: "com.trivago:triava:${versions.tcache}",
    stream: "com.clearspring.analytics:stream:${versions.stream}",
    univocityParsers: "com.univocity:univocity-parsers:${versions.univocityParsers}",
    ycsb: dependencies.create("site.ycsb:core:${versions.ycsb}") {
      transitive = false
    },
    xz: "org.tukaani:xz:${versions.xz}",
    zstd: "com.github.luben:zstd-jni:${versions.zstd}",
  ]
  testLibraries = [
    awaitility: "org.awaitility:awaitility:${testVersions.awaitility}",
    commonsCollectionsTests: [
      "org.apache.commons:commons-collections4:${testVersions.commonsCollectionsTests}",
      "org.apache.commons:commons-collections4:${testVersions.commonsCollectionsTests}:tests",
    ],
    eclipseCollectionsTestLib: "org.eclipse.collections:eclipse-collections-testutils:${testVersions.eclipseCollections}",
    guavaTestLib: "com.google.guava:guava-testlib:${versions.guava}",
    hamcrest: "org.hamcrest:hamcrest:${testVersions.hamcrest}",
    jcacheGuice: "org.jsr107.ri:cache-annotations-ri-guice:${versions.jcache}",
    jcacheTck: "javax.cache:cache-tests:${testVersions.jcacheTck}",
    jcacheTckTests: "javax.cache:cache-tests:${testVersions.jcacheTck}:tests",
    jcacheTckTestSources: "javax.cache:cache-tests:${testVersions.jcacheTck}:test-sources",
    jctools: "org.jctools:jctools-core:${testVersions.jctools}",
    junit: [
      "junit:junit:${testVersions.junit4}",
      "org.junit.jupiter:junit-jupiter:${testVersions.junit5}",
    ],
    junitEngines: [
      "org.junit.vintage:junit-vintage-engine:${testVersions.junit5}",
      "org.junit.support:testng-engine:${testVersions.junitTestNG}",
    ],
    lincheck: "org.jetbrains.kotlinx:lincheck-jvm:${testVersions.lincheck}",
    mockito: "org.mockito:mockito-core:${testVersions.mockito}",
    osgiCompile: "org.ops4j.pax.exam:pax-exam-junit4:${testVersions.paxExam}",
    osgiRuntime: [
      "org.apache.felix:org.apache.felix.framework:${testVersions.felix}",
      "org.apache.felix:org.apache.felix.scr:${testVersions.felixScr}",
      "org.osgi:org.osgi.util.function:${testVersions.osgiUtilFunction}",
      "org.osgi:org.osgi.util.promise:${testVersions.osgiUtilPromise}",
      "org.ops4j.pax.exam:pax-exam-container-native:${testVersions.paxExam}",
      "org.ops4j.pax.exam:pax-exam-link-mvn:${testVersions.paxExam}",
      'org.ops4j.pax.url:pax-url-aether:2.6.7',
    ],
    slf4jTest: [
      "com.github.valfirst:slf4j-test:${testVersions.slf4jTest}",
      "org.slf4j:slf4j-jdk-platform-logging:${versions.slf4j}",
    ],
    testng: [
      "org.testng:testng:${testVersions.testng}",
      "com.google.inject:guice:${testVersions.guice}",
    ],
    truth: [
      "com.google.truth:truth:${testVersions.truth}",
      "com.google.truth.extensions:truth-java8-extension:${testVersions.truth}"
    ],
  ]
  gradlePlugins = [
    bnd: "biz.aQute.bnd:biz.aQute.bnd.gradle:${pluginVersions.bnd}",
    checkstyle: dependencies.create("com.puppycrawl.tools:checkstyle:${pluginVersions.checkstyle}") {
      transitive = false
    },
    coveralls: "gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:${pluginVersions.coveralls}",
    dependencyCheck: "org.owasp:dependency-check-gradle:${pluginVersions.dependencyCheck}",
    errorprone: "net.ltgt.gradle:gradle-errorprone-plugin:${pluginVersions.errorprone}",
    findsecbugs: "com.h3xstream.findsecbugs:findsecbugs-plugin:${pluginVersions.findsecbugs}",
    forbiddenApis: "de.thetaphi:forbiddenapis:${pluginVersions.forbiddenApis}",
    jmh: [
      "me.champeau.jmh:jmh-gradle-plugin:${pluginVersions.jmh}",
      "org.openjdk.jmh:jmh-core:${versions.jmh}",
    ],
    jmhReport: "gradle.plugin.io.morethan.jmhreport:gradle-jmh-report:${pluginVersions.jmhReport}",
    nexusPublish: "io.github.gradle-nexus:publish-plugin:${pluginVersions.nexusPublish}",
    nullaway: "net.ltgt.gradle:gradle-nullaway-plugin:${pluginVersions.nullaway}",
    pmd: "net.sourceforge.pmd:pmd:${pluginVersions.pmd}",
    semanticVersioning: "io.ehdev:gradle-semantic-versioning:${pluginVersions.semanticVersioning}",
    snyke: "gradle.plugin.io.snyk.gradle.plugin:snyk:${pluginVersions.snyke}",
    sonarqube: "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${pluginVersions.sonarqube}",
    spotbugs: "com.github.spotbugs:spotbugs:${pluginVersions.spotbugs}",
    spotbugsContrib: "com.mebigfatguy.sb-contrib:sb-contrib:${pluginVersions.spotbugsContrib}",
    spotbugsPlugin: "com.github.spotbugs.snom:spotbugs-gradle-plugin:${pluginVersions.spotbugsPlugin}",
    versions: "com.github.ben-manes:gradle-versions-plugin:${pluginVersions.versions}",
  ]
  annotationProcessors = [
    autoValue: "com.google.auto.value:auto-value:${versions.autoValue}",
  ]
  platforms = [
    "org.jetbrains.kotlin:kotlin-bom:${platformVersions.kotlin}",
    "org.ow2.asm:asm-bom:${platformVersions.asm}",
  ]
  testPlatforms = [
    "org.junit:junit-bom:${testVersions.junit5}",
  ]
  restrictions = [
    'com.beust:jcommander': '1.82',
    'com.fasterxml.jackson:jackson-bom': '2.14.1',
    'com.google.protobuf:protobuf-java': '3.21.8',
    'com.thoughtworks.xstream:xstream': '1.4.20',
    'org.apache.bcel:bcel': '6.6.1',
    'org.apache.commons:commons-text': '1.10.0',
    'org.apache.httpcomponents:httpclient': '4.5.13',
    'org.bouncycastle:bcprov-jdk15on': '1.70',
    'org.jsoup:jsoup': '1.15.3',
    'org.yaml:snakeyaml': '1.33',
    'xerces:xercesImpl': '2.12.2',
  ]
}
