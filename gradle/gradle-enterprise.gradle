gradleEnterprise {
  if (!gradle.startParameter.isBuildScan()) {
    server = 'https://caffeine.gradle-enterprise.cloud/'
    buildScan.publishIfAuthenticated()
  }
  buildScan {
    capture.taskInputFiles = true

    if (System.env.CI) {
      uploadInBackground = false
      publishAlways()
    } else {
      obfuscation.ipAddresses { [] }
    }
    if (System.env.GITHUB_ACTIONS) {
      obfuscation.username { 'github' }
    }

    termsOfServiceAgree = 'yes'
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
  }
}

buildCache {
  local.enabled = true
  remote(HttpBuildCache) {
    url = 'https://caffeine.gradle-enterprise.cloud/cache/'
    enabled = true
    def cachePassword = settings.ext.find('gradleEnterpriseCachePassword')
        ?: System.env.GRADLE_ENTERPRISE_CACHE_PASSWORD
    // Check cache password presence to avoid build cache errors on PR builds when not present
    push = System.env.CI && cachePassword
    credentials {
      username = 'ci'
      password = cachePassword
    }
  }
}
