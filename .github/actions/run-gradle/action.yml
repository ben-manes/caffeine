name: Run Gradle
description: Sets up Gradle JDKs and runs Gradle
inputs:
  arguments:
    required: false
    description: Gradle arguments
  java:
    required: true
    description: The JDK version
  early-access:
    default: '25'
    required: false
    description: The early access release
  graal:
    default: '21'
    required: false
    description: The GraalVM version
  cache-encryption-key:
    required: false
    description: A Gradle cache encryption key
  attempt-limit:
    default: '1'
    required: false
    description: Number of attempts
  attempt-delay:
    default: '0'
    required: false
    description: A delay between attempts in seconds
runs:
  using: composite
  steps:
    - name: Read Gradle JDK toolchain version
      id: gradle_toolchain
      shell: bash
      run: |
        toolchainVersion=$(grep -oP '(?<=^toolchainVersion=).*' gradle/gradle-daemon-jvm.properties)
        echo "version=${toolchainVersion}" >> $GITHUB_OUTPUT
    - name: Set up JDK ${{ steps.gradle_toolchain.outputs.version }}
      uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
      with:
        java-version: ${{ steps.gradle_toolchain.outputs.version }}
        distribution: temurin
    - name: Prepare JDK toolchain
      id: java_toolchain
      env:
        INPUTS_JAVA: ${{ inputs.java }}
        INPUTS_GRAAL: ${{ inputs.graal }}
      shell: bash
      run: |
        if [[ "$INPUTS_JAVA" == "GraalVM" ]]; then
          echo "vendor=GraalVM Community" >> $GITHUB_OUTPUT
          echo "version=$INPUTS_GRAAL" >> $GITHUB_OUTPUT
        else
          echo "vendor=Adoptium" >> $GITHUB_OUTPUT
          echo "version=$INPUTS_JAVA" >> $GITHUB_OUTPUT
        fi
    - name: Set up JDK
      uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
      with:
        java-version: ${{
          inputs.java == 'GraalVM' && inputs.graal ||
          (inputs.early-access == inputs.java && format('{0}-ea', inputs.java) || inputs.java) }}
        distribution: ${{ inputs.java == 'GraalVM' && 'graalvm' || 'temurin' }}
    - name: Prepare JDK ${{ inputs.java }}
      id: prepare_java
      env:
        INPUTS_JAVA: ${{ inputs.java }}
        JDK_EA: ${{ inputs.early-access == inputs.java }}
      shell: bash
      run: |
        if [[ "$INPUTS_JAVA" == "GraalVM" ]]; then
          echo "graalvm_home=$JAVA_HOME" >> $GITHUB_OUTPUT
        fi
        echo "early_access=$JDK_EA" >> $GITHUB_OUTPUT
        echo "java_home=$JAVA_HOME" >> $GITHUB_OUTPUT
        echo "tool_options=-Dorg.gradle.workers.max=$((2 * $(nproc)))" >> $GITHUB_OUTPUT
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0
      with:
        add-job-summary: never
        cache-read-only: false
        gradle-home-cache-strict-match: true
        gradle-home-cache-includes: |
          caches
          wrapper
          notifications
        cache-encryption-key: ${{ inputs.cache-encryption-key }}
    - name: Run ${{ inputs.arguments }}
      if: ${{ inputs.arguments != '' }}
      env:
        INPUTS_ARGUMENTS: ${{ inputs.arguments }}
        INPUTS_ATTEMPT_DELAY: ${{ inputs.attempt-delay }}
        INPUTS_ATTEMPT_LIMIT: ${{ inputs.attempt-limit }}
        JDK_CI: ${{ steps.prepare_java.outputs.java_home }}
        JDK_EA: ${{ steps.prepare_java.outputs.early_access }}
        JAVA_VENDOR: ${{ steps.java_toolchain.outputs.vendor }}
        JAVA_VERSION: ${{ steps.java_toolchain.outputs.version }}
        JAVA_TOOL_OPTIONS: ${{ steps.prepare_java.tool_options }}
        GRAALVM_HOME: ${{ steps.prepare_java.outputs.graalvm_home }}
        ORG_GRADLE_PROJECT_org.gradle.java.installations.auto-download: false
      shell: bash
      run: |
        echo "::add-matcher::.github/problem-matcher.json"
        for ((i=1; i<=$INPUTS_ATTEMPT_LIMIT; i++)); do
          ./gradlew --no-problems-report $(echo "$INPUTS_ARGUMENTS" | tr -d '\n') && break
          if [ $i -lt $INPUTS_ATTEMPT_LIMIT ]; then
            echo "Attempt $i failed. Retrying in $INPUTS_ATTEMPT_DELAY seconds..."
            sleep $INPUTS_ATTEMPT_DELAY
          else
            echo "All attempts failed."
            exit 1
          fi
        done
