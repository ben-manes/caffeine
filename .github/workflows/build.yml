name: build
on: [ push, pull_request ]

env:
  ORG_GRADLE_PROJECT_checksumFailOn: build_finish
  ORG_GRADLE_PROJECT_checksumIgnore: false
  ORG_GRADLE_PROJECT_checksumPrint: true
  MIN_JVM: 11
  MAX_JVM: 16

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 16 ]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Cache Gradle packages
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
            ~/.sonar/cache
          key: ${{ runner.os }}-${{ github.job }}-${{ matrix.java }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Run tests
        run: ./.github/scripts/test.sh
      - name: Publish Coverage
        if: >
          matrix.java == env.MIN_JVM
          && github.event_name == 'push'
          && endsWith(github.ref, github.event.repository.default_branch)
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: ./gradlew coveralls -S
        continue-on-error: true
      - name: SonarQube
        if: >
          matrix.java == env.MAX_JVM
          && github.event_name == 'push'
          && endsWith(github.ref, github.event.repository.default_branch)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube -S
        continue-on-error: true
      - name: Publish Snapshot
        if: >
          matrix.java == env.MIN_JVM
          && github.event_name == 'push'
          && endsWith(github.ref, github.event.repository.default_branch)
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: 20BCF6B1
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        run: ./gradlew publishToSonatype
