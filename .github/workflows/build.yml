name: build
permissions: read-all
on: [ push, pull_request ]

env:
  GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  ALLOWED_ENDPOINTS: >
    1k4dacprodeus2file4.blob.core.windows.net:443
    artifactcache.actions.githubusercontent.com:443
    api.azul.com:443
    api.github.com:443
    caffeine.gradle-enterprise.cloud:443
    cdn.azul.com:443
    checkerframework.org:443
    cloudflare.com:443
    codecov.io:443
    coveralls.io:443
    fastly.com:443
    docs.oracle.com:443
    domain artifacts.codacy.com::433
    downloads.gradle-dn.com:443
    ghcr.io:443
    github.com:443
    guava.dev:443
    lightbend.github.io:443
    nodejs.org:443
    oss.sonatype.org:443
    pipelines.actions.githubusercontent.com:443
    plugins.gradle.org:443
    plugins-artifacts.gradle.org:443
    raw.githubusercontent.com
    repo.gradle.org:443
    repo.maven.apache.org:443
    repo1.maven.org:443
    scans-in.gradle.com:443
    services.gradle.org:443
    sonarcloud.io:443
    storage.googleapis.com:443
    uploader.codecov.io:443
  LANG: en_US.utf8
  MIN_JVM: 11
  MAX_JVM: 18

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 18 ]
    env:
      JAVA_VERSION: ${{ matrix.java }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@248ae51c2e8cc9622ecf50685c8bf7150c6e8813
        with:
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          cache: 'gradle'
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Compile
        run: |
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
          trap "echo '::$stopMarker::'" EXIT
          ./gradlew check -x test
      - name: Cancel if failed
        uses: andymckay/cancel-action@0.2
        continue-on-error: true
        if: failure()

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: compile
    strategy:
      matrix:
        suite:
          - caffeine:weakKeysAndStrongValuesStatsAsyncCaffeineSlowTest
          - caffeine:weakKeysAndStrongValuesStatsSyncCaffeineSlowTest
          - caffeine:strongKeysAndWeakValuesStatsSyncCaffeineSlowTest
          - caffeine:strongKeysAndSoftValuesStatsSyncCaffeineSlowTest
          - caffeine:strongKeysAndStrongValuesStatsAsyncCaffeineTest
          - caffeine:weakKeysAndWeakValuesStatsSyncCaffeineSlowTest
          - caffeine:weakKeysAndSoftValuesStatsSyncCaffeineSlowTest
          - caffeine:strongKeysAndStrongValuesStatsSyncCaffeineTest
          - caffeine:weakKeysAndStrongValuesStatsSyncGuavaSlowTest
          - caffeine:weakKeysAndStrongValuesStatsAsyncCaffeineTest
          - caffeine:strongKeysAndWeakValuesStatsSyncGuavaSlowTest
          - caffeine:strongKeysAndSoftValuesStatsSyncGuavaSlowTest
          - caffeine:weakKeysAndStrongValuesStatsSyncCaffeineTest
          - caffeine:weakKeysAndStrongValuesAsyncCaffeineSlowTest
          - caffeine:strongKeysAndWeakValuesStatsSyncCaffeineTest
          - caffeine:strongKeysAndSoftValuesStatsSyncCaffeineTest
          - caffeine:weakKeysAndWeakValuesStatsSyncGuavaSlowTest
          - caffeine:weakKeysAndStrongValuesSyncCaffeineSlowTest
          - caffeine:weakKeysAndSoftValuesStatsSyncGuavaSlowTest
          - caffeine:strongKeysAndWeakValuesSyncCaffeineSlowTest
          - caffeine:strongKeysAndStrongValuesStatsSyncGuavaTest
          - caffeine:strongKeysAndSoftValuesSyncCaffeineSlowTest
          - caffeine:weakKeysAndWeakValuesStatsSyncCaffeineTest
          - caffeine:weakKeysAndSoftValuesStatsSyncCaffeineTest
          - caffeine:strongKeysAndStrongValuesAsyncCaffeineTest
          - caffeine:weakKeysAndWeakValuesSyncCaffeineSlowTest
          - caffeine:weakKeysAndStrongValuesStatsSyncGuavaTest
          - caffeine:weakKeysAndSoftValuesSyncCaffeineSlowTest
          - caffeine:strongKeysAndWeakValuesStatsSyncGuavaTest
          - caffeine:strongKeysAndStrongValuesSyncCaffeineTest
          - caffeine:strongKeysAndSoftValuesStatsSyncGuavaTest
          - caffeine:weakKeysAndStrongValuesSyncGuavaSlowTest
          - caffeine:weakKeysAndStrongValuesAsyncCaffeineTest
          - caffeine:strongKeysAndWeakValuesSyncGuavaSlowTest
          - caffeine:strongKeysAndSoftValuesSyncGuavaSlowTest
          - caffeine:weakKeysAndWeakValuesStatsSyncGuavaTest
          - caffeine:weakKeysAndStrongValuesSyncCaffeineTest
          - caffeine:weakKeysAndSoftValuesStatsSyncGuavaTest
          - caffeine:strongKeysAndWeakValuesSyncCaffeineTest
          - caffeine:strongKeysAndSoftValuesSyncCaffeineTest
          - caffeine:weakKeysAndWeakValuesSyncGuavaSlowTest
          - caffeine:weakKeysAndSoftValuesSyncGuavaSlowTest
          - caffeine:strongKeysAndStrongValuesSyncGuavaTest
          - caffeine:weakKeysAndWeakValuesSyncCaffeineTest
          - caffeine:weakKeysAndSoftValuesSyncCaffeineTest
          - caffeine:weakKeysAndStrongValuesSyncGuavaTest
          - caffeine:strongKeysAndWeakValuesSyncGuavaTest
          - caffeine:strongKeysAndSoftValuesSyncGuavaTest
          - caffeine:weakKeysAndWeakValuesSyncGuavaTest
          - caffeine:weakKeysAndSoftValuesSyncGuavaTest
          - caffeine:lincheckTest
          - caffeine:isolatedTest
          - caffeine:junitTest
          - simulator:check
          - jcache:check
          - guava:check
        java: [ 11, 18 ]
    env:
      JAVA_VERSION: ${{ matrix.java }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@248ae51c2e8cc9622ecf50685c8bf7150c6e8813
        with:
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          cache: 'gradle'
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run tests (${{ matrix.suite }})
        run: |
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
          trap "echo '::$stopMarker::'" EXIT
          ./gradlew ${{ matrix.suite }}
      - name: Format Test Artifact Name
        if: always() && (matrix.java == env.MAX_JVM)
        run: |
          RAW_NAME=${{ matrix.suite }}-${{ matrix.java }}
          ARTIFACT_NAME=$(echo $RAW_NAME | sed 's/:/-/g')
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
      - name: Compress test results
        uses: sibiraj-s/action-archiver@v1
        if: always() && (matrix.java == env.MAX_JVM)
        with:
          path: '**/{jacoco,results}/**/*.{exec,xml}'
          output: ${{ env.ARTIFACT_NAME }}.tar.gz
          format: tar
          gzip: true
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always() && (matrix.java == env.MAX_JVM)
        with:
          retention-days: 1
          name: ${{ env.ARTIFACT_NAME }}-results
          path: ${{ env.ARTIFACT_NAME }}.tar.gz
      - name: Cancel if failed
        uses: andymckay/cancel-action@0.2
        continue-on-error: true
        if: failure()

  publish:
    name: Publish Snapshot
    runs-on: ubuntu-latest
    needs: test
    if: >
      github.event_name == 'push'
      && endsWith(github.ref, github.event.repository.default_branch)
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@248ae51c2e8cc9622ecf50685c8bf7150c6e8813
        with:
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ env.MIN_JVM }}
        uses: actions/setup-java@v3
        with:
          cache: 'gradle'
          distribution: 'zulu'
          java-version: ${{ env.MIN_JVM }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Publish Snapshot
        env:
          JAVA_VERSION: ${{ env.MIN_JVM }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: 20BCF6B1
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        run: |
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
          trap "echo '::$stopMarker::'" EXIT
          ./gradlew publishToSonatype

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@248ae51c2e8cc9622ecf50685c8bf7150c6e8813
        with:
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK ${{ env.MAX_JVM }}
        uses: actions/setup-java@v3
        with:
          cache: 'gradle'
          distribution: 'zulu'
          java-version: ${{ env.MAX_JVM }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Download Tests Results
        uses: actions/download-artifact@v3
      - name: Decompress
        run: find . -type f -name '*.tar.gz' -exec sh -c 'tar -zxf {} --one-top-level' \;
      - name: Publish Coverage (Coveralls)
        env:
          JAVA_VERSION: ${{ env.MAX_JVM }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
          trap "echo '::$stopMarker::'" EXIT
          ./gradlew --daemon coveralls
        continue-on-error: true
      - name: Publish Coverage (Codecov)
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Publish Coverage (Codacy)
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        continue-on-error: true
      - name: SonarQube
        env:
          JAVA_VERSION: ${{ env.MAX_JVM }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
          trap "echo '::$stopMarker::'" EXIT
          git fetch --unshallow
          ./gradlew --daemon sonarqube -Dsonar.branch.name=${GITHUB_REF##*/}
        continue-on-error: true
      - name: Stop Gradle daemon
        if: always()
        run: ./gradlew --stop

  test-results:
    name: Test Results
    runs-on: ubuntu-latest
    needs: test
    permissions:
      checks: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@248ae51c2e8cc9622ecf50685c8bf7150c6e8813
        with:
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - name: Download Tests
        uses: actions/download-artifact@v3
      - name: Decompress
        run: |
          find . -type f -name '*.tar.gz' -exec sh -c 'tar -zxf {} --one-top-level' \;
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        continue-on-error: true
        id: test-results
        with:
          comment_mode: off
          ignore_runs: true
          job_summary: true
          files: '**/TEST-*.xml'
      - name: Format Test Count
        run: |
          COUNT=${{ fromJSON(steps.test-results.outputs.json).stats.runs }}
          echo "TEST_COUNT=$(printf "%'d" $COUNT)" >> $GITHUB_ENV
      - name: Create badge
        uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
        with:
          label: tests
          color: 31c653
          path: badge.svg
          status: ${{ env.TEST_COUNT }}
      - name: Upload badge to Gist
        uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
        if: endsWith(github.ref, github.event.repository.default_branch)
        with:
          gistURL: https://gist.githubusercontent.com/ben-manes/c20eb418f0e0bd6dfe1c25beb35faae4
          token: ${{ secrets.GIST_TOKEN }}
          file: badge.svg
