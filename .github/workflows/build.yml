name: Build
permissions: {}
on:
  pull_request: {}
  push:
    branches: [master, v2.dev, v3.dev]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
env:
  DEVELOCITY_ACCESS_KEY: ${{ secrets.DEVELOCITY_ACCESS_KEY }}
  ALLOWED_ENDPOINTS: >
    *.actions.githubusercontent.com:443
    api.adoptium.net:443
    api.foojay.io:443
    api.github.com:443
    api.snapcraft.io:443
    caffeine.gradle-enterprise.cloud:443
    cdn.azul.com:443
    cloudflare.com:443
    docker.io:443
    download.java.net:443
    download.oracle.com:443
    downloads.gradle.org:443
    downloads.gradle-dn.com:443
    gds.oracle.com:443
    ghcr.io:443
    github.com:443
    jdk.java.net:443
    jcenter.bintray.com:443
    objects.githubusercontent.com:443
    oss.sonatype.org:443
    plugins.gradle.org:443
    plugins-artifacts.gradle.org:443
    raw.githubusercontent.com:443
    registry.npmjs.org:443
    repo.gradle.org:443
    repo.maven.apache.org:443
    repo1.maven.org:443
    scans-in.gradle.com:443
    services.gradle.org:443
    schemastore.org:443
    www.graalvm.org:443
  PUBLISH_JDK: 11

jobs:
  compile:
    name: Compile
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        java: [ 11, 25, 26-ea ]
    env:
      JAVA_VERSION: ${{ matrix.java }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Compile
        uses: ./.github/actions/run-gradle
        with:
          arguments: assemble
          java: ${{ env.JAVA_VERSION }}
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

  tests:
    name: Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: compile
    permissions:
      contents: read
    strategy:
      matrix:
        suite:
          - caffeine:weakKeysAndStrongValuesStatsAsyncCaffeineSlowTest
          - caffeine:weakKeysAndStrongValuesStatsSyncCaffeineSlowTest
          - caffeine:strongKeysAndWeakValuesStatsSyncCaffeineSlowTest
          - caffeine:strongKeysAndSoftValuesStatsSyncCaffeineSlowTest
          - caffeine:strongKeysAndStrongValuesStatsAsyncCaffeineTest
          - caffeine:weakKeysAndWeakValuesStatsSyncCaffeineSlowTest
          - caffeine:weakKeysAndSoftValuesStatsSyncCaffeineSlowTest
          - caffeine:strongKeysAndStrongValuesStatsSyncCaffeineTest
          - caffeine:weakKeysAndStrongValuesStatsAsyncCaffeineTest
          - caffeine:weakKeysAndStrongValuesStatsSyncCaffeineTest
          - caffeine:weakKeysAndStrongValuesAsyncCaffeineSlowTest
          - caffeine:strongKeysAndWeakValuesStatsSyncCaffeineTest
          - caffeine:strongKeysAndSoftValuesStatsSyncCaffeineTest
          - caffeine:weakKeysAndStrongValuesSyncCaffeineSlowTest
          - caffeine:strongKeysAndWeakValuesSyncCaffeineSlowTest
          - caffeine:strongKeysAndSoftValuesSyncCaffeineSlowTest
          - caffeine:weakKeysAndWeakValuesStatsSyncCaffeineTest
          - caffeine:weakKeysAndSoftValuesStatsSyncCaffeineTest
          - caffeine:strongKeysAndStrongValuesAsyncCaffeineTest
          - caffeine:weakKeysAndWeakValuesSyncCaffeineSlowTest
          - caffeine:weakKeysAndSoftValuesSyncCaffeineSlowTest
          - caffeine:strongKeysAndStrongValuesSyncCaffeineTest
          - caffeine:weakKeysAndStrongValuesAsyncCaffeineTest
          - caffeine:weakKeysAndStrongValuesSyncCaffeineTest
          - caffeine:strongKeysAndWeakValuesSyncCaffeineTest
          - caffeine:strongKeysAndSoftValuesSyncCaffeineTest
          - caffeine:weakKeysAndWeakValuesSyncCaffeineTest
          - caffeine:weakKeysAndSoftValuesSyncCaffeineTest
          - caffeine:junitJupiterTest
          - caffeine:integrationTest
          - caffeine:standaloneTest
          - caffeine:isolatedTest
          - caffeine:junitTest
          - simulator:check
          - jcache:check
          - guava:check
        java: [ 11, 25 ]
        include:
          - suite: caffeine:weakKeysAndStrongValuesStatsSyncGuavaSlowTest
            java: 11
          - suite: caffeine:strongKeysAndWeakValuesStatsSyncGuavaSlowTest
            java: 11
          - suite: caffeine:strongKeysAndSoftValuesStatsSyncGuavaSlowTest
            java: 11
          - suite: caffeine:weakKeysAndWeakValuesStatsSyncGuavaSlowTest
            java: 11
          - suite: caffeine:weakKeysAndSoftValuesStatsSyncGuavaSlowTest
            java: 11
          - suite: caffeine:strongKeysAndStrongValuesStatsSyncGuavaTest
            java: 11
          - suite: caffeine:weakKeysAndStrongValuesStatsSyncGuavaTest
            java: 11
          - suite: caffeine:strongKeysAndWeakValuesStatsSyncGuavaTest
            java: 11
          - suite: caffeine:strongKeysAndSoftValuesStatsSyncGuavaTest
            java: 11
          - suite: caffeine:weakKeysAndStrongValuesSyncGuavaSlowTest
            java: 11
          - suite: caffeine:strongKeysAndWeakValuesSyncGuavaSlowTest
            java: 11
          - suite: caffeine:strongKeysAndSoftValuesSyncGuavaSlowTest
            java: 11
          - suite: caffeine:weakKeysAndWeakValuesStatsSyncGuavaTest
            java: 11
          - suite: caffeine:weakKeysAndSoftValuesStatsSyncGuavaTest
            java: 11
          - suite: caffeine:weakKeysAndWeakValuesSyncGuavaSlowTest
            java: 11
          - suite: caffeine:weakKeysAndSoftValuesSyncGuavaSlowTest
            java: 11
          - suite: caffeine:strongKeysAndStrongValuesSyncGuavaTest
            java: 11
          - suite: caffeine:weakKeysAndStrongValuesSyncGuavaTest
            java: 11
          - suite: caffeine:strongKeysAndWeakValuesSyncGuavaTest
            java: 11
          - suite: caffeine:strongKeysAndSoftValuesSyncGuavaTest
            java: 11
          - suite: caffeine:weakKeysAndWeakValuesSyncGuavaTest
            java: 11
          - suite: caffeine:weakKeysAndSoftValuesSyncGuavaTest
            java: 11
          - suite: caffeine:fuzzTest
            java: 11
          - suite: caffeine:lincheckTest
            java: 25
    env:
      JAVA_VERSION: ${{ matrix.java }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Run tests (${{ env.JAVA_VERSION }})
        uses: ./.github/actions/run-gradle
        with:
          java: ${{ env.JAVA_VERSION }}
          arguments: ${{ matrix.suite }}
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - name: Format Test Artifact Name
        if: >
          always() &&
          ((env.JAVA_VERSION == env.PUBLISH_JDK) || (matrix.suite == 'caffeine:lincheckTest'))
        id: format_artifact
        env:
          INPUTS_ARGUMENTS: ${{ matrix.suite }}
        run: |
          RAW_NAME=$INPUTS_ARGUMENTS-$JAVA_VERSION
          ARTIFACT_NAME=$(echo $RAW_NAME | sed 's/:/-/g')
          echo "name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
      - name: Compress test results
        if: always() && (env.JAVA_VERSION == env.PUBLISH_JDK)
        env:
          ARTIFACT_NAME: ${{ steps.format_artifact.outputs.name }}
        run: >
          find . -path */jacoco/*.exec -o -path */results/*.xml
          | tar czf $ARTIFACT_NAME.tar.gz --files-from -
      - name: Upload test results
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        if: always() && (env.JAVA_VERSION == env.PUBLISH_JDK)
        with:
          retention-days: 1
          name: ${{ steps.format_artifact.outputs.name }}-results
          path: ${{ steps.format_artifact.outputs.name }}.tar.gz

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: block
          allowed-endpoints: >
            ${{ env.ALLOWED_ENDPOINTS }}
            artifacts.codacy.com:443
            api.codacy.com:443
            codecov.io:443
            coveralls.io:443
            fastly.com:443
            nodejs.org:443
            raw.githubusercontent.com
            sonarcloud.io:443
            scanner.sonarcloud.io:443
            storage.googleapis.com:443
            uploader.codecov.io:443
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Download Tests Results
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
      - name: Decompress
        run: find . -type f -name '*.tar.gz' -exec sh -c 'tar -zxf {} --one-top-level' \;
      - name: Prepare Jacoco Reports
        uses: ./.github/actions/run-gradle
        with:
          arguments: assemble
          java: ${{ env.PUBLISH_JDK }}
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - name: Combine Jacoco Reports
        uses: ./.github/actions/run-gradle
        with:
          arguments: jacocoFullReport
          java: ${{ env.PUBLISH_JDK }}
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@076e0072799f4942c8bc574a82233e1e4d13e9d6 # v3.0.0
        with:
          files: ./build/reports/jacoco/jacocoFullReport/jacocoFullReport.xml
      - name: Upload Jacoco Full Report
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          retention-days: 1
          name: jacoco-report
          path: ./build/reports/jacoco/jacocoFullReport
      - name: Publish to Coveralls
        uses: ./.github/actions/run-gradle
        if: >
          (github.event_name == 'push')
          && (github.event.repository.fork == false)
          && (steps.check_files.outputs.files_exists == 'true')
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        with:
          arguments: coverallsJacoco --no-configuration-cache
          java: ${{ env.PUBLISH_JDK }}
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
        continue-on-error: true
      - name: Publish to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        if: >
          (github.event_name == 'push')
          && (github.event.repository.fork == false)
          && (steps.check_files.outputs.files_exists == 'true')
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Publish to Codacy
        uses: codacy/codacy-coverage-reporter-action@89d6c85cfafaec52c72b6c5e8b2878d33104c699 # v1.3.0
        if: >
          (github.event_name == 'push')
          && (github.event.repository.fork == false)
          && (steps.check_files.outputs.files_exists == 'true')
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        continue-on-error: true
      - name: Publish to SonarQube
        uses: ./.github/actions/run-gradle
        if: >
          github.event_name == 'push'
          && github.event.repository.fork == false
          && (steps.check_files.outputs.files_exists == 'true')
          && endsWith(github.ref, github.event.repository.default_branch)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          java: ${{ env.PUBLISH_JDK }}
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          arguments: sonar -Dsonar.branch.name=${{ github.ref_name }} --no-parallel
        continue-on-error: true

  test-results:
    name: Test Results
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      contents: read
      checks: write # Needed to annotate commit
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            ${{ env.ALLOWED_ENDPOINTS }}
            badgen.net:443
            codecov.io:443
            uploader.codecov.io:443
      - name: Download Tests
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
      - name: Decompress
        run: find . -type f -name '*.tar.gz' -exec sh -c 'tar -zxf {} --one-top-level' \;
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2.20.0
        continue-on-error: true
        id: test-results
        with:
          json_thousands_separator: ','
          files: '**/TEST-*.xml'
          comment_mode: off
          ignore_runs: true
          job_summary: true
      - name: Create badge
        id: test-badge
        env:
          LABEL: tests
          COLOR: 31c653
          STATUS: ${{ fromJSON(steps.test-results.outputs.json).formatted.stats.runs }}
        continue-on-error: true
        run: curl -s -f https://badgen.net/badge/$LABEL/$STATUS/$COLOR > badge.svg
      - name: Upload badge to Gist
        uses: popsiclestick/gist-sync-action@88f8633178625914f2a01abf1a765f7272a580fa # v1.2.0
        if: >
          github.event_name == 'push'
          && github.event.repository.fork == false
          && steps.test-badge.outcome == 'success'
          && endsWith(github.ref, github.event.repository.default_branch)
        with:
          gist_url: https://gist.githubusercontent.com/ben-manes/c20eb418f0e0bd6dfe1c25beb35faae4
          auth: ${{ secrets.GIST_TOKEN }}
          gist_description: Test Results
          github_file: badge.svg
          gist_title: badge.svg
      - name: Publish to Codecov
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        if: >
          github.event_name == 'push'
          && github.event.repository.fork == false
          && endsWith(github.ref, github.event.repository.default_branch)
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  reproducibility:
    name: Reproducibility
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: block
          allowed-endpoints: ${{ env.ALLOWED_ENDPOINTS }}
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Setup Gradle
        uses: ./.github/actions/run-gradle
        with:
          java: ${{ env.PUBLISH_JDK }}
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - name: Verify Build Reproducibility
        env:
          ORG_GRADLE_PROJECT_javaVersion: ${{ env.PUBLISH_JDK }}
        shell: bash
        run: ./.github/scripts/checkBuildReproducibility.sh

  publish-snapshot:
    name: Publish Snapshot
    runs-on: ubuntu-latest
    needs: [reproducibility, tests]
    if: >
      github.event_name == 'push'
      && github.event.repository.fork == false
      && endsWith(github.ref, github.event.repository.default_branch)
    permissions:
      contents: read
      id-token: write # Needed for signing
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: block
          allowed-endpoints: >
            ${{ env.ALLOWED_ENDPOINTS }}
            central.sonatype.com:443
            docs.oracle.com:443
            errorprone.info:443
            guava.dev:443
            jspecify.dev:443
            lightbend.github.io:443
            oauth2.sigstore.dev:443
            ossrh-staging-api.central.sonatype.com:443
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Publish Snapshot
        uses: ./.github/actions/run-gradle
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.OSSRH_GPG_SECRET_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        with:
          attempt-limit: 3
          attempt-delay: 2
          java: ${{ env.PUBLISH_JDK }}
          arguments: publishToSonatype --no-configuration-cache
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
