name: examples
permissions: read-all
on: [ push, pull_request ]

env:
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  JAVA_VERSION: 21

jobs:
  examples:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            api.adoptium.net:443
            caffeine.gradle-enterprise.cloud:443
            download.oracle.com:443
            downloads.gradle.org:443
            downloads.gradle-dn.com:443
            gds.oracle.com:443
            github.com:443
            jcenter.bintray.com:443
            objects.githubusercontent.com:443
            plugins.gradle.org:443
            plugins-artifacts.gradle.org:443
            repo.maven.apache.org:443
            repo1.maven.org:443
            services.gradle.org:443
            www.graalvm.org:443
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: Wandalen/wretry.action@0ef67d343938e879e0a9bb37c107a55731e8ed35 # v1.4.5
        timeout-minutes: 5
        with:
          action: actions/setup-java@9704b39bf258b59bc04b50fa2dd55e9ed76b47a8 # v4.1.0
          with: |
            distribution: temurin
            java-version: ${{ env.JAVA_VERSION }}
          attempt_limit: 3
          attempt_delay: 2000
      - name: Setup Gradle
        uses: Wandalen/wretry.action@0ef67d343938e879e0a9bb37c107a55731e8ed35 # v1.4.5
        timeout-minutes: 5
        with:
          action: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
          with: |
            add-job-summary: never
            cache-read-only: false
            gradle-home-cache-cleanup: true
            gradle-home-cache-strict-match: true
          attempt_limit: 3
          attempt_delay: 2000
      - name: Setup Maven
        uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 # v4.0.1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ env.JAVA_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Simulator
        run: >
          ./gradlew simulator:run
          -Dcaffeine.simulator.report.output=$(pwd)/simulation.md
          -Dcaffeine.simulator.files.paths.0="corda:trace_vaultservice.gz"
          -Dcaffeine.simulator.files.paths.1="lirs:loop.trace.gz"
          -Dcaffeine.simulator.files.paths.2="corda:trace_vaultservice.gz"
      - name: Publish Simulator Results
        run: |
          {
            echo '### Adaptivity'
            echo '```'
            cat $(pwd)/simulation.md
            echo '```'
          } >> $GITHUB_STEP_SUMMARY
      - name: Chart Simulation
        run: ./gradlew -q simulator:simulate --maximumSize=100,200,300
      - name: Memory Overhead
        run: ./gradlew -q caffeine:memoryOverhead
      - name: Stresser (read)
        run: >
          timeout 1m ./gradlew -q caffeine:stress --workload=read
          || ([[ $? -eq 124 ]] && echo "Timeout reached, but that's OK")
      - name: Stresser (write)
        run: >
          timeout 1m ./gradlew -q caffeine:stress --workload=write
          || ([[ $? -eq 124 ]] && echo "Timeout reached, but that's OK")
      - name: Stresser (refresh)
        run: >
          timeout 1m ./gradlew -q caffeine:stress --workload=refresh
          || ([[ $? -eq 124 ]] && echo "Timeout reached, but that's OK")
      - name: Write-behind (rxjava)
        working-directory: examples/write-behind-rxjava
        run: ./gradlew build
      - name: Coalescing Bulkloader (reactor)
        working-directory: examples/coalescing-bulkloader-reactor
        run: ./gradlew build
      - name: Hibernate (jcache)
        working-directory: examples/hibernate
        run: ./gradlew build
      - name: Resilience (failsafe)
        working-directory: examples/resilience-failsafe
        run: ./gradlew build
      - name: Prepare for Graal Native Image
        uses: ./.github/actions/run-gradle
        env:
          SNAPSHOT: true
        with:
          java: GraalVM
          token: ${{ secrets.GITHUB_TOKEN }}
          arguments: -q caffeine:clean caffeine:jar
      - name: Graal Native Image
        uses: ./.github/actions/run-gradle
        env:
          SNAPSHOT: true
        with:
          java: GraalVM
          token: ${{ secrets.GITHUB_TOKEN }}
          arguments: >
            --project-dir examples/graal-native
            -Pagent run
            metadataCopy --task run --dir src/main/resources/META-INF/native-image
            nativeRun nativeTest
