name: examples
permissions: read-all
on: [ push, pull_request ]

env:
  GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  JAVA_VERSION: 20
  SNAPSHOT: true

jobs:
  examples:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            api.adoptium.net:443
            caffeine.gradle-enterprise.cloud:443
            downloads.gradle.org:443
            downloads.gradle-dn.com:443
            github.com:443
            jcenter.bintray.com:443
            objects.githubusercontent.com:443
            plugins.gradle.org:443
            plugins-artifacts.gradle.org:443
            repo.maven.apache.org:443
            repo1.maven.org:443
            services.gradle.org:443
            www.graalvm.org:443
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: Wandalen/wretry.action@e6cf3db7de3777ba5f999f903c2f4efdd9ac7288 # v1.0.36
        timeout-minutes: 5
        with:
          action: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
          with: |
            distribution: temurin
            java-version: ${{ env.JAVA_VERSION }}
          attempt_limit: 3
          attempt_delay: 2000
      - name: Setup Gradle
        uses: Wandalen/wretry.action@e6cf3db7de3777ba5f999f903c2f4efdd9ac7288 # v1.0.36
        timeout-minutes: 5
        with:
          action: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 # v2.4.2
          with: |
            cache-read-only: false
            generate-job-summary: false
            arguments: help --no-scan
            gradle-home-cache-strict-match: true
          attempt_limit: 3
          attempt_delay: 2000
      - name: Setup Maven
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ env.JAVA_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Simulator
        run: >
          ./gradlew simulator:run
          -Dcaffeine.simulator.report.output=$(pwd)/simulation.md
          -Dcaffeine.simulator.files.paths.0="corda:trace_vaultservice.gz"
          -Dcaffeine.simulator.files.paths.1="lirs:loop.trace.gz"
          -Dcaffeine.simulator.files.paths.2="corda:trace_vaultservice.gz"
      - name: Publish Simulator Results
        run: |
          {
            echo '### Adaptivity'
            echo '```'
            cat $(pwd)/simulation.md
            echo '```'
          } >> $GITHUB_STEP_SUMMARY
      - name: Chart Simulation
        run: ./gradlew -q simulator:simulate --maximumSize=100,200,300
      - name: Memory Overhead
        run: ./gradlew -q caffeine:memoryOverhead
      - name: Stresser (read)
        run: >
          timeout 1m ./gradlew -q caffeine:stress --workload=read
          || ([[ $? -eq 124 ]] && echo "Timeout reached, but that's OK")
      - name: Stresser (write)
        run: >
          timeout 1m ./gradlew -q caffeine:stress --workload=write
          || ([[ $? -eq 124 ]] && echo "Timeout reached, but that's OK")
      - name: Stresser (refresh)
        run: >
          timeout 1m ./gradlew -q caffeine:stress --workload=refresh
          || ([[ $? -eq 124 ]] && echo "Timeout reached, but that's OK")
      - name: Write-behind (rxjava)
        working-directory: examples/write-behind-rxjava
        run: ./mvnw test
      - name: Coalescing Bulkloader
        working-directory: examples/coalescing-bulkloader
        run: ./mvnw test
      - name: Hibernate JCache
        working-directory: examples/hibernate
        run: ./gradlew build
      - name: Prepare for Graal Native Image
        uses: ./.github/actions/run-gradle
        with:
          java: GraalVM
          token: ${{ secrets.GITHUB_TOKEN }}
          arguments: -q caffeine:clean caffeine:jar
      - name: Graal Native Image
        uses: ./.github/actions/run-gradle
        with:
          java: GraalVM
          token: ${{ secrets.GITHUB_TOKEN }}
          arguments: >
            --project-dir examples/graal-native
            -Pagent run
            metadataCopy --task run --dir src/main/resources/META-INF/native-image
            nativeRun nativeTest
