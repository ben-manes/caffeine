apply from: "${rootDir}/gradle/jmh.gradle"
apply from: "${projectDir}/testing.gradle"

sourceSets {
  javaPoet {
    java.srcDir 'src/javaPoet/java'
  }
  main {
    java.srcDir "${buildDir}/generated-sources/"
  }
}

configurations {
  javaAgent
}

plugins.withType(EclipsePlugin) {
  project.eclipse.classpath.plusConfigurations += [ configurations.javaPoetCompile ]
}

dependencies {
  testCompile libraries.ycsb
  testCompile libraries.guava
  testCompile test_libraries.junit
  testCompile test_libraries.testng
  testCompile test_libraries.jctools
  testCompile libraries.commons_lang3
  testCompile test_libraries.guava_testlib

  javaAgent benchmark_libraries.jamm

  jmh libraries.flip_tables
  jmh benchmark_libraries.jamm
  jmh benchmark_libraries.tcache
  jmh benchmark_libraries.cache2k
  jmh benchmark_libraries.ehcache2
  jmh benchmark_libraries.ehcache3
  jmh benchmark_libraries.koloboke
  jmh benchmark_libraries.slf4j_nop
  jmh benchmark_libraries.collision
  jmh benchmark_libraries.jackrabbit
  jmh benchmark_libraries.expiring_map
  jmh benchmark_libraries.elastic_search
  jmh benchmark_libraries.concurrentlinkedhashmap
  jmh benchmark_libraries.rapidoid

  javaPoetCompile libraries.guava
  javaPoetCompile libraries.jsr305
  javaPoetCompile libraries.javapoet
  javaPoetCompile libraries.commons_lang3
}

jar.manifest {
  name 'com.github.ben-manes.caffeine'
  instruction 'Import-Package',
    'sun.misc.*;resolution:=optional'
  instruction 'Export-Package',
    'com.github.benmanes.caffeine',
    'com.github.benmanes.caffeine.base',
    'com.github.benmanes.caffeine.cache',
    'com.github.benmanes.caffeine.cache.stats'
}

task generateLocalCaches(type: JavaExec) {
  main = 'com.github.benmanes.caffeine.cache.LocalCacheFactoryGenerator'
  classpath = sourceSets.javaPoet.runtimeClasspath
  args "${buildDir}/generated-sources/"
  jvmArgs += '-noverify'

  outputs.upToDateWhen { !tasks.compileJavaPoetJava.didWork }
}
compileJava.dependsOn(generateLocalCaches)

task generateNodes(type: JavaExec) {
  main = 'com.github.benmanes.caffeine.cache.NodeFactoryGenerator'
  classpath = sourceSets.javaPoet.runtimeClasspath
  args "${buildDir}/generated-sources/"
  jvmArgs += '-noverify'

  outputs.upToDateWhen { !tasks.compileJavaPoetJava.didWork }
}
compileJava.dependsOn(generateNodes)

task memoryOverhead(type: JavaExec, group: 'Benchmarks', description: 'Evaluates cache overhead') {
  classpath sourceSets.jmh.runtimeClasspath
  jvmArgs "-javaagent:${configurations.javaAgent.singleFile}"
  main = 'com.github.benmanes.caffeine.cache.MemoryBenchmark'
}
